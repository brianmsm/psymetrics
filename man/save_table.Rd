% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/save_table.R
\name{save_table}
\alias{save_table}
\title{Save a Table to a Specified Format}
\usage{
save_table(table_data, path, template = NULL, digits = 3, ...)
}
\arguments{
\item{table_data}{A data frame containing the table data to be exported.}

\item{path}{A string specifying the file path where the table should be saved. The file extension determines
the format (currently only .docx is supported).}

\item{template}{A string specifying the path to a Word template (.docx) to be used. If NULL, a default
template provided by the package is used.}

\item{digits}{An integer indicating the number of decimal places to use when formatting numeric columns.
Defaults to 3.}

\item{...}{Additional arguments passed to \code{flextable::tt} when exporting to Word.}
}
\description{
\code{save_table()} exports a table to various formats, with current support for Word documents (.docx).
The table is formatted using a specified or default template and can be customized with different font styles,
sizes, and alignment options.
}
\details{
This function checks the file extension to determine the export format. Currently, only Word documents
(.docx) are supported. The function formats the table using the \code{flextable} package and exports it
using the \code{officer} package. Users can provide a custom Word template or rely on the package's default
template.

If the \code{path} has a .docx extension, the table will be saved as a Word document. The default template
aligns the table to APA style, and the font is set to Arial with a font size of 10.
}
\examples{
library(lavaan)
library(psymetrics)
model1 <- 'visual  =~ x1 + x2 + x3 + x4'
model2 <- 'visual  =~ x1 + x2 + x3 + x4 + x5'
fit1 <- cfa(model1, data = HolzingerSwineford1939, estimator = "MLR")
fit2 <- cfa(model2, data = HolzingerSwineford1939, estimator = "MLR")
fit_compared <- compare_model_fit(fit1, fit2)
save_table(fit_compared, path = "model_fit.docx")

}
